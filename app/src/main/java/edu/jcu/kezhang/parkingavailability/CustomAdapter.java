package edu.jcu.kezhang.parkingavailability;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import java.util.List;

/** A custom RecyclerView adaptor class provide views to RecyclerView with data from carparkDataSet.
 * @author Ke Zhang
 * @version 1.0
 * @since 2022-12-1
 */
public class CustomAdapter extends RecyclerView.Adapter<CarparkViewHolder> {

    // Initialise list of Carpark objects contain all information.
    private List<Carpark> carparkDataSet;

    // Initialise the context where adapter view is implemented.
    Context context;

    /**
     * Initialise the dataset of the Adapter.
     * @param dataSet Carpark[] containing the data to populate views to be used by RecyclerView.
     * @param context Context containing the intent to be implemented.
     */
    public CustomAdapter(List<Carpark> dataSet, Context context)
    {
        this.carparkDataSet = dataSet;
        this.context = context;
    }

    /** Create new view object contain items generated by LayoutInflater
     * and card_carpark xml layout then provide to ViewGroup.
     * @param parent A ViewGroup that get content where the view is displayed in adaptor style.
     * @param viewType A integer representing the view type of the new View..
     * @return A CarparkViewHolder provide view template for each carpark item.
     */
    @NonNull
    @Override
    public CarparkViewHolder onCreateViewHolder(ViewGroup parent, int viewType){
        Context context = parent.getContext();
        LayoutInflater inflater  = LayoutInflater.from(context);

        // Inflate the carpark item layout.
        View photoView
                = inflater
                .inflate(R.layout.card_carpark,
                        parent, false);

        return new CarparkViewHolder(photoView);
    }

    /** Replace the contents of a view using custom ViewHolder.
     * @param viewHolder A CarparkViewHolder representing the view template for each item
     *                   in RecycleView.
     * @param position A integer representing the position of item in RecycleView.
     */
    @SuppressLint("DefaultLocale")
    @Override
    public void onBindViewHolder(final CarparkViewHolder viewHolder, final int position)
    {
        /* Get information from ArrayList of Carpark objects and implement each on
        the CarparkViewHolder template. */
        viewHolder.development
                .setText(carparkDataSet.get(position).getDevelopment());
        viewHolder.area
                .setText("Area: " + carparkDataSet.get(position).getArea());
        viewHolder.carparkId
                .setText("ID: " + carparkDataSet.get(position).getCarParkID());
        viewHolder.numOfCar
                .setText(String.format("%d",carparkDataSet.get(position).getAvailableLots()));

        // Get the map coordinates and convert it to executable search command on Google map App.
        viewHolder.view.setOnClickListener(view -> {
            // Get the string contain map coordinate.
            String LocationName = carparkDataSet.get(viewHolder.getAdapterPosition()).getLocation();
            String latitude = LocationName.split(" ")[0];
            String longitude = LocationName.split(" ")[1];
            String strUri = "http://maps.google.com/maps?q=loc:" + latitude + "," + longitude ;

            // Create a Uri from an intent string. Use the result to create an Intent.
            Uri gmmIntentUri = Uri.parse(strUri);

            // Create an Intent from gmmIntentUri and set the action to ACTION_VIEW.
            Intent mapIntent = new Intent(Intent.ACTION_VIEW, gmmIntentUri);

            // Make the Intent explicit by setting the Google Maps package.
            mapIntent.setPackage("com.google.android.apps.maps");
            mapIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);

            // Attempt to start an activity that can handle the Intent.
            context.startActivity(mapIntent);

        });
    }

    /** Get the size of current dataset (ArrayList).
     * @return A integer representing the size of current dataset.
     */
    @Override
    public int getItemCount()
    {
        return carparkDataSet.size();
    }



}
